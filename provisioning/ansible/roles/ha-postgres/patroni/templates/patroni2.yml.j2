scope: pg-ha-cluster 
name: pp_pg_2

log:
  level: WARNING
  format: '%(asctime)s %(levelname)s: %(message)s'
  dateformat: ''
  max_queue_size: 1000
  dir: /var/log/postgresql
  file_num: 4
  file_size: 25000000
  loggers:
    postgres.postmaster: WARNING
    urllib3: DEBUG

restapi:
  listen: 0.0.0.0:8008
  connect_address: {% set host = groups['postgres'][2] %}{{ hostvars[host]['ansible_eth1']['ipv4']['address'] }}:8008

etcd3:
  hosts: 
  - {% set etcd_host0 = groups['etcd'][0] %}{{ hostvars[etcd_host0]['ansible_eth1']['ipv4']['address'] }}:2379
  - {% set etcd_host1 = groups['etcd'][1] %}{{ hostvars[etcd_host1]['ansible_eth1']['ipv4']['address'] }}:2379
  - {% set etcd_host2 = groups['etcd'][2] %}{{ hostvars[etcd_host2]['ansible_eth1']['ipv4']['address'] }}:2379
  protocol: https
  cacert: /etc/ssl/certs/etcd-ca.pem
  cert: /etc/ssl/certs/client.pem
  key: /etc/ssl/certs/client-key.pem

bootstrap:
  dcs:
    ttl: 30
    loop_wait: 10
    retry_timeout: 10
    maximum_lag_on_failover: 0
    synchronous_mode: true
    synchronous_mode_strict: false
    postgresql:
#      recovery_conf:
#        restore_command: {{ postgres_scripts_directory }}/restore_wal.sh %p %f
#        recovery_target_time: '2021-06-11 13:20:00'
#        recovery_target_action: promote
      use_pg_rewind: true
      use_slots: true
      parameters:
        max_connections: 200
        shared_buffers: 2GB
        effective_cache_size: 6GB
        maintenance_work_mem: 512MB
        checkpoint_completion_target: 0.7
        wal_buffers: 16MB
        default_statistics_target: 100
        random_page_cost: 1.1
        effective_io_concurrency: 200
        work_mem: 2621kB
        min_wal_size: 1GB
        max_wal_size: 4GB
        max_worker_processes: 40
        max_parallel_workers_per_gather: 4
        max_parallel_workers: 40
        max_parallel_maintenance_workers: 4

        max_locks_per_transaction: 64
        max_prepared_transactions: 0
        wal_level: replica
        wal_log_hints: on
        track_commit_timestamp: off
        max_wal_senders: 10
        max_replication_slots: 10
        wal_keep_segments: 8
        logging_collector: on
        log_destination: csvlog
        log_directory: pg_log
        log_min_messages: warning
        log_min_error_statement: error
        log_min_duration_statement: 1000
        log_duration: off
        log_statement: all

  initdb:
  - encoding: UTF8
  - data-checksums
  pg_hba:
  - host all postgres all md5
  - host replication repl all md5

  users:
    postgres:
      password: "{{ default_password }}"
      options:
        - createrole
        - createdb
    repl:
      password: "{{ default_password }}"
      options:
        - replication

postgresql:
  listen: 0.0.0.0:5432
  connect_address: {% set host = groups['postgres'][2] %}{{ hostvars[host]['ansible_eth1']['ipv4']['address'] }}:5432
  data_dir: /var/lib/postgresql/12/main
  bin_dir: /usr/lib/postgresql/12/bin
  config_dir: /var/lib/postgresql/12/main
  pgpass: /var/lib/postgresql/.pgpass
  pg_hba:
    - local   all             all                                     md5
    - host    all             all             127.0.0.1/32            md5
    - host    all             all             ::1/128                 md5
    - local   replication     all                                     md5
    - host    replication     all             127.0.0.1/32            md5
    - host    replication     all             ::1/128                 md5
    - host all postgres {{ subnet}}0/24 md5
    - host replication repl {{ groups['postgres'][0] }} md5
    - host replication repl {{ groups['postgres'][1] }} md5
    - host replication repl {{ groups['postgres'][2] }} md5
  authentication:
    replication:
      username: repl
      password: "{{ default_password }}"
    superuser:
      username: postgres
      password: "{{ default_password }}"
  parameters:
    archive_mode: on
    archive_command: {{ postgres_scripts_directory }}/copy_wal.sh %p %f
    archive_timeout: 600
    unix_socket_directories: '/var/run/postgresql'
    port: 5432
