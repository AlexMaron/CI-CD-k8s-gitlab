- name: Check if node joined to the cluster.
  stat:
    path: /var/lib/kubelet/config.yaml
    get_attributes: no
    get_checksum: no
    get_mime: no
  register: kubeadm_already_joined
  tags: join_node

- name: Configure node ip
  lineinfile:
    path: /etc/default/kubelet
    line: KUBELET_EXTRA_ARGS=--node-ip={{ inventory_hostname }}
    create: yes

- name: Restart kubelet
  service:
    name: kubelet
    daemon_reload: yes
    state: restarted

  #- name: creating kubernetes user
  #user:
  #  name: k8s
  #  state: present
  #  password: "{{ password | password_hash('sha512') }}"
  #  shell: /bin/bash
  #  create_home: yes
  #  group: adm
  #  register: user_info
  #

- name: check old pki existing
  stat:
    path: /etc/kubernetes/kubelet.conf
  register: stat_result
  tags: 
    - never
    - clean_cluster

- name: clean_cluster debug
  debug:
    var: stat_result.stat.exists
    verbosity: 2
  tags: 
    - never
    - clean_cluster

- name: delete old pki on nodes
  file:
    state: absent
    path: "{{ item }}"
  with_items:
    - /etc/kubernetes/pki
    - /etc/kubernetes/kubelet.conf
  ignore_errors: yes
  when: stat_result.stat.exists
  tags:
    - never
    - clean_cluster

- name: Generate join command
  command: kubeadm token create --print-join-command
  register: join_command
  delegate_to: "{{ groups['kube_control_plane'][0] }}"
  tags: join_node

- name: Copy join command to local file
  local_action: copy content="{{ join_command.stdout_lines[0] }}" dest="./join-command" mode='0644'
  delegate_to: "{{ groups['kube_control_plane'][0] }}"
  tags: join_node

- name: Copy the join command to server location
  copy: src=join-command dest=/tmp/join-command.sh mode=0777
  tags: join_node

- name: Join the nodes to cluster
  command: sh /tmp/join-command.sh
  when: not kubeadm_already_joined.stat.exists
  tags: join_node
